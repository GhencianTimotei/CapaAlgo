/*
******************************************************************************
* \image html "Kopf_oZusatz_A4hoch_4C.jpg"
*
* \par Module Owner:
* Huf Huelsbeck & Fuerst GmbH & Co.KG \n
* Steeger Str. 17 \n
* 42551 Velbert \n
* Department PDE - S
*
******************************************************************************
* \par Description:
*Generated header file for generated types used by EcuM
* Implementation based on Autosar 4.2 specifications   \n
*
* % PCMS_HEADER_SUBSTITUTION_START:%
******************************************************************************
*Document Management Information Log(generated by Dimensions CM)
*
*
*CM Item:   % PID:%
*Itemname:  % PM:%
*Location:  % ARCHIVE:%
*Revision:  % PR:%
*Date:      % DATE:%
*Author:    % AUTHOR:%
*
* % PCMS_HEADER_SUBSTITUTION_END:%
*
******************************************************************************/ 

/* [SWS_EcuM_02992] */

#ifndef  ECUM_GENERATED_TYPES_H_                /* To avoid double inclusion */
#define  ECUM_GENERATED_TYPES_H_

#include "Std_Types.h"
#include "Mcu.h"
#include "Os.h"

/* [SWS_EcuMf_00048] */
typedef U8 EcuM_UserType;
typedef U8 ECUM_COMMCHANNELS_TYPE;

/* [BSW_SWS_EcuMf_00005] */

typedef struct
{
      Mcu_ModeType          EcuM_MCUSleepMode;       /* corresponding MCU mode for the sleep mode */
      EcuM_WakeupSourceType EcuM_WkpSources;         /* masks the wake up sources that shall be enabled for this sleep mode, each bit represents a wake up source */
      BOOL                  EcuM_SleepModeSuspended; /* ECUM_TRUE  if the CPU is suspended, halted, or powered off in the sleep mode
                                                        ECUM_FALSE if the CPU keeps running in this sleep mode */
}EcuM_SleepModeSettingsType;
 
/* [BSW_SWS_EcuMf_00007] */

typedef struct
{
      EcuM_WakeupSourceType    EcuM_WkpSource;         /* Name of the wakeup source */
      U16                      EcuM_ValidationTimeout; /* Contains the value of validation timeout for each wake up source.
                                                       If the wake up source does not need validation the value shall be ECUM_NO_VALIDATION_TIMEOUT */
      ECUM_COMMCHANNELS_TYPE   EcuM_ComMChannelRef; /* ComM channel reference. If the wakeup source is not a communication channel value is ECUM_UNDEFINED_COMM_CHANNEL */
}EcuM_WakeupSourceValidationType;

/* [SWS_EcuMf_00119] */
typedef U8 EcuM_SleepModeType;

extern const EcuM_SleepModeSettingsType EcuM_S_SleepModeSet[ECUM_NO_OF_SLEEP_MODES]; /* contains a list with all wake up sources enabled into each sleep mode */
extern const EcuM_WakeupSourceValidationType EcuM_WkpSourceValidation[ECUM_NO_OF_WAKEUP_SOURCES]; /* contains a list with the validation timeouts for all the wake up sources */
extern const ECUM_COMMCHANNELS_TYPE EcuM_ComMChannels[ECUM_NO_OF_COMM_CHANNELS]; /* contains a list with all configured ComM channels for which EcuM has to call ComM_CommunicationAllowed */

/* polyspace-begin MISRA-C3:D4.9 [Not a defect:Unset] "Macro used to facilitate easier configuration." */
#define ECUM_DISABLE_ALL_INTERRUPTS()		SuspendAllInterrupts()
#define ECUM_ENABLE_ALL_INTERRUPTS()		ResumeAllInterrupts()
/* [SWS_EcuMf_00010] */
#define ECUM_START_OS()							StartOS(OSDEFAULTAPPMODE)
#define ECUM_SHUTDOWN_OS()						ShutdownOS(0)
#define ECUM_LOCK_SCHEDULER()					GetResource(RES_SCHEDULER)
#define ECUM_UNLOCK_SCHEDULER()				ReleaseResource(RES_SCHEDULER)
/* polyspace-end MISRA-C3:D4.9 [Not a defect:Unset] "Macro used to facilitate easier configuration." */

#endif   /* ECUM_GENERATED_TYPES_H_ */



/* %PCMS_HEADER_SUBSTITUTION_START:%
 ******************************************************************************
 * Document Management Information Log (generated by Dimensions CM)
 *
 *  Description:
 *  %PD:%
 *
 *  Used by Baselines:
 *  %PIRB:%
 *
 *  Used by Dimensions CM Projects:
 *  %PIRW:%
 *
 *  Change History:
 *  %PL:%
 *
 * %PCMS_HEADER_SUBSTITUTION_END:%
 */
