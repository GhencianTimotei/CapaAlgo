/*!
* \defgroup Os Mcal (Os_Mcal.h) Mod Os Mcal functions
* \{
******************************************************************************
* \image html "Kopf_oZusatz_A4hoch_4C.jpg"
*
* \par Module Owner:
* Huf Group
*
* \par Initial Project:
* 1656.001 BSW
*
******************************************************************************
* \par Description:
* Operating System, MCAL Layer header file
*
******************************************************************************
*
* %PCMS_HEADER_SUBSTITUTION_START:%
*
* Configuration Management Information Log (generated by Dimensions CM)
*
*
* CM Item: %PID:%
* Item name: %PM:%
* Location: %ARCHIVE:%
* Revision: %PR:%
* Date: %DATE:%
* Author: %AUTHOR:%
*
* %PCMS_HEADER_SUBSTITUTION_END:% *
******************************************************************************
*
* \par Layer:
* MCAL
*
* \par Compiler dialect:
* C99
*
* \par Controller:
* RL78/RH850/S32X
*
* \par Estimated resources:
* | Resource | Amount   | Remarks         |
* | ---------| -------- | ----------------|
* | ROM      | x Byte   | on x controller |
* | RAM      | y Byte   | on x controller |
* | NVRAM    | z Byte   | on x controller |
* | Runtime Init | X ms |                 |
* | Runtime Task | X ms |                 |
*
******************************************************************************/
#ifndef OS_MCAL_H_							/* To avoid double inclusion */
#define OS_MCAL_H_

/*[SWPS_SWS_MCALOS_00001] */
/* polyspace +3 MISRA-C3:1.1 [Not a defect:Unset] "Includes are necessary into current implementation" */
#include "Std_Types.h"
#include "Os_Mcal_Cfg.h"
#include "Os_TypesCfg.h"

/* OS tick counter */
extern Os_CounterType volatile Os_TickCounter;

/*!
 ******************************************************************************
 * \brief
 * Initialize MCAL OS
 *
 * \details
 *
 ******************************************************************************
 *
 * \sync          synchronous (function done in one pass)
 * \reent         Non Reentrant
 *
 * \pre           -
 * \post          -
 *
 * \param[out]     void
 * \param[in]      void
 *
 * \glob_start
 *
 *   \glob_item{out, Os_HighAddrOsFunc, sets high address of Os_CheckAlarms function}
 *   \glob_item{out, Os_LowAddrOsFunc, sets low address of Os_CheckAlarms function}
 *
 * \glob_end
 *
 * \returns        void
 *******************************************************************************
 *
 * \author        PDES-BSW
 * \version       1.0
 * \date          04.09.2019
 *
 ******************************************************************************
 *
 * \par Change history:
 *    \li 04.09.2019, PDES-BSW:
 *       - initial revision
 *
 ******************************************************************************
 *
 * \par Remarks: It is called by OS in case background task functionality is
 * enabled
 ******************************************************************************/
extern void Os_InitMcal(void);

#if ((OS_TIMER_SOURCE == OS_TIMER_RJ_RL78) || (OS_TIMER_SOURCE == OS_TIMER_BSW_GPT))
/*!
 ******************************************************************************
 * \brief
 * Initialize OS timer source
 * \details
 * Initialize timer RJ or enables GPT timer interrupt if they are configured to be
 * used for OS tick
 *
 ******************************************************************************
 *
 * \sync          synchronous (function done in one pass)
 * \reent         Non Reentrant
 *
 * \pre           -
 * \post          -
 *
 * \param[out]     void
 * \param[in]      void
 *
 * \glob_start
 *
 * \glob_end
 *
 * \returns        void
 *******************************************************************************
 *
 * \author        PDES-BSW
 * \version       1.0
 * \date          04.09.2019
 *
 ******************************************************************************
 *
 * \par Change history:
 *    \li 04.09.2019, PDES-BSW:
 *       - initial revision
 *
 ******************************************************************************
 *
 * \par Remarks:
 *
 ******************************************************************************/
/* polyspace +1 MISRA-C3:5.1 [Justified:Low] "C99 standard is used to compile, Huf naming convention" */
extern void Os_TimerInit(void);
#endif /* #if ((OS_TIMER_SOURCE == OS_TIMER_RJ_RL78) || (OS_TIMER_SOURCE == OS_TIMER_BSW_GPT)) */

#if (OS_TIMER_SOURCE == OS_TIMER_OSTM0_RH850)
/*!
 ******************************************************************************
 * \brief
 * Initialise OS timer source
 * \details
 * Initialise OSTM timer of RH850 F1L controller if it is configured to be
 * used for OS tick
 ******************************************************************************
 *
 * \sync          synchronous (function done in one pass)
 * \reent         Non Reentrant
 *
 * \pre           -
 * \post          -
 *
 * \param[out]     void
 * \param[in]      void
 *
 * \glob_start
 *
 * \glob_end
 *
 * \returns        void
 *******************************************************************************
 *
 * \author        PDES-BSW
 * \version       1.0
 * \date          27.05.2020
 *
 ******************************************************************************
 *
 * \par Change history:
 *    \li 27.05.2020, PDES-BSW:
 *       - initial revision
 *
 ******************************************************************************
 *
 * \par Remarks:
 *
 ******************************************************************************/
/* polyspace +1 MISRA-C3:5.1 [Justified:Low] "C99 standard is used to compile, Huf naming convention" */
extern void Os_TimerInit(void);
#endif /* #if (OS_TIMER_SOURCE == OS_TIMER_OSTM0_RH850) */

#if (OS_TIMER_SOURCE == OS_TIMER_SYSTICK_S32K)
/*!
 ******************************************************************************
 * \brief
 * Initialise OS timer source
 * \details
 * Initialise SysTick timer of S32K controller if it is configured to be
 * used for OS tick
 ******************************************************************************
 *
 * \sync          synchronous (function done in one pass)
 * \reent         Non Reentrant
 *
 * \pre           -
 * \post          -
 *
 * \param[out]     void
 * \param[in]      void
 *
 * \glob_start
 *
 * \glob_end
 *
 * \returns        void
 *******************************************************************************
 *
 * \author        PDES-BSW
 * \version       1.0
 * \date          23.02.2021
 *
 ******************************************************************************
 *
 * \par Change history:
 *    \li 23.02.2021, PDES-BSW:
 *       - initial revision
 *
 ******************************************************************************
 *
 * \par Remarks:
 *
 ******************************************************************************/
/* polyspace +1 MISRA-C3:5.1 [Justified:Low] "C99 standard is used to compile, Huf naming convention" */
extern void Os_TimerInit(void);
#endif /* #if (OS_TIMER_SOURCE == OS_TIMER_SYSTICK_S32K) */

#if ((OS_TIMER_SOURCE == OS_TIMER_RJ_RL78) || (OS_TIMER_SOURCE == OS_TIMER_BSW_GPT))
/*!
 ******************************************************************************
 * \brief
 * Start timer used for OS tick
 *
 * \details
 * This function is able to start RL78 Timer RJ or a RL78 BSW GPT timer
 ******************************************************************************
 *
 * \sync          synchronous (function done in one pass)
 * \reent         Non Reentrant
 *
 * \pre           -
 * \post          -
 *
 * \param[out]     void
 * \param[in]      void
 *
 * \glob_start
 *
 * \glob_end
 *
 * \returns        void
 ********************************************************************************
 *
 * \author        PDES-BSW
 * \version       1.0
 * \date          04.09.2019
 *
 ******************************************************************************
 *
 * \par Change history:
 *    \li 04.09.2019, PDES-BSW:
 *       - initial revision
 *
 ******************************************************************************
 *
 * \par Remarks:
 *
 ******************************************************************************/
/* polyspace +1 MISRA-C3:5.1 [Justified:Low] "C99 standard is used to compile, Huf naming convention" */
extern void Os_TimerStart(void);
#endif /* #if ((OS_TIMER_SOURCE == OS_TIMER_RJ_RL78) || (OS_TIMER_SOURCE == OS_TIMER_BSW_GPT)) */

#if (OS_TIMER_SOURCE == OS_TIMER_OSTM0_RH850)
/*!
 ******************************************************************************
 * \brief
 * Start timer used for OS tick
 *
 * \details
 * This function is able to start RH850 OSMT0 Timer
 ******************************************************************************
 *
 * \sync          synchronous (function done in one pass)
 * \reent         Non Reentrant
 *
 * \pre           -
 * \post          -
 *
 * \param[out]     void
 * \param[in]      void
 *
 * \glob_start
 *
 * \glob_end
 *
 * \returns        void
 ********************************************************************************
 *
 * \author        PDES-BSW
 * \version       1.0
 * \date          27.05.2020
 *
 ******************************************************************************
 *
 * \par Change history:
 *    \li 27.05.2020, PDES-BSW:
 *       - initial revision
 *
 ******************************************************************************
 *
 * \par Remarks:
 *
 ******************************************************************************/
/* polyspace +1 MISRA-C3:5.1 [Justified:Low] "C99 standard is used to compile, Huf naming convention" */
extern void Os_TimerStart(void);
#endif /* #if (OS_TIMER_SOURCE == OS_TIMER_OSTM0_RH850) */

#if (OS_TIMER_SOURCE == OS_TIMER_SYSTICK_S32K)
/*!
 ******************************************************************************
 * \brief
 * Start timer used for OS tick
 *
 * \details
 * This function is able to start SysTick Timer for S32K controller.
 * When setting the ENABLE bit to 1, the counter loads the RELOAD value from the
 * SYST_RVR register into the SYST_CVR(current value register) and then counts down.
 ******************************************************************************
 *
 * \sync          synchronous (function done in one pass)
 * \reent         Non Reentrant
 *
 * \pre           -
 * \post          -
 *
 * \param[out]     void
 * \param[in]      void
 *
 * \glob_start
 *
 * \glob_end
 *
 * \returns        void
 ********************************************************************************
 *
 * \author        PDES-BSW
 * \version       1.0
 * \date          23.02.2021
 *
 ******************************************************************************
 *
 * \par Change history:
 *    \li 23.02.2021, PDES-BSW:
 *       - initial revision
 *
 ******************************************************************************
 *
 * \par Remarks:
 *
 ******************************************************************************/
/* polyspace +1 MISRA-C3:5.1 [Justified:Low] "C99 standard is used to compile, Huf naming convention" */
extern void Os_TimerStart(void);
#endif /* #if (OS_TIMER_SOURCE == OS_TIMER_SYSTICK_S32K) */

#if ((OS_TIMER_SOURCE == OS_TIMER_RJ_RL78) || (OS_TIMER_SOURCE == OS_TIMER_BSW_GPT))
/*!
 ******************************************************************************
 * \brief
 * Stop timer used for OS tick
 *
 * \details
 * This function is able to stop RL78 Timer RJ or a RL78 BSW GPT timer
 ******************************************************************************
 *
 * \sync          synchronous (function done in one pass)
 * \reent         Non Reentrant
 *
 * \pre           -
 * \post          -
 *
 * \param[out]     void
 * \param[in]      void
 *
 * \glob_start
 *
 * \glob_end
 *
 * \returns        void
 ********************************************************************************
 *
 * \author        PDES-BSW
 * \version       1.0
 * \date          15.10.2019
 *
 ******************************************************************************
 *
 * \par Change history:
 *    \li 15.10.2019, PDES-BSW:
 *       - initial revision
 *
 ******************************************************************************
 *
 * \par Remarks:
 *
 ******************************************************************************/
/* polyspace +1 MISRA-C3:5.1 [Justified:Low] "C99 standard is used to compile, Huf naming convention" */
extern void Os_TimerStop(void);
#endif /* #if ((OS_TIMER_SOURCE == OS_TIMER_RJ_RL78) || (OS_TIMER_SOURCE == OS_TIMER_BSW_GPT)) */

#if (OS_TIMER_SOURCE == OS_TIMER_OSTM0_RH850)
/*!
 ******************************************************************************
 * \brief
 * Stop timer used for OS tick
 *
 * \details
 * This function is able to stop RH850 OSMT0 Timer
 ******************************************************************************
 *
 * \sync          synchronous (function done in one pass)
 * \reent         Non Reentrant
 *
 * \pre           -
 * \post          -
 *
 * \param[out]     void
 * \param[in]      void
 *
 * \glob_start
 *
 * \glob_end
 *
 * \returns        void
 ********************************************************************************
 *
 * \author        PDES-BSW
 * \version       1.0
 * \date          27.05.2020
 *
 ******************************************************************************
 *
 * \par Change history:
 *    \li 27.05.2020, PDES-BSW:
 *       - initial revision
 *
 ******************************************************************************
 *
 * \par Remarks:
 *
 ******************************************************************************/
/* polyspace +1 MISRA-C3:5.1 [Justified:Low] "C99 standard is used to compile, Huf naming convention" */
extern void Os_TimerStop(void);
#endif /* #if (OS_TIMER_SOURCE == OS_TIMER_OSTM0_RH850)  */

#if (OS_TIMER_SOURCE == OS_TIMER_SYSTICK_S32K)
/*!
 ******************************************************************************
 * \brief
 * Stop timer used for OS tick
 *
 * \details
 * This function is able to stop SysTick timer for S32K controller
 ******************************************************************************
 *
 * \sync          synchronous (function done in one pass)
 * \reent         Non Reentrant
 *
 * \pre           -
 * \post          -
 *
 * \param[out]     void
 * \param[in]      void
 *
 * \glob_start
 *
 * \glob_end
 *
 * \returns        void
 ********************************************************************************
 *
 * \author        PDES-BSW
 * \version       1.0
 * \date          23.02.2021
 *
 ******************************************************************************
 *
 * \par Change history:
 *    \li 23.02.2021, PDES-BSW:
 *       - initial revision
 *
 ******************************************************************************
 *
 * \par Remarks:
 *
 ******************************************************************************/
/* polyspace +1 MISRA-C3:5.1 [Justified:Low] "C99 standard is used to compile, Huf naming convention" */
extern void Os_TimerStop(void);

#if (STD_OFF != OS_SAVE_CONTEXT_ON_STACK)
/*!
 ******************************************************************************
 * \brief
 * Evaluate/update alarms and restores the context
 *
 * \details
 * This function is used in case background task is enabled. It is pushed on
 * stack into tick interrupt and is executed after exiting from the interrupt.
 * It evaluates the alarms and for RL78 it restores the context before interrupt
 * happened and for S32K controller it sets to pending the SVCall exception which
 * will restore the context.
 ******************************************************************************
 *
 * \sync          synchronous (function done in one pass)
 * \reent         Reentrant
 *
 * \pre           -
 * \post          -
 *
 * \param[out]     void
 * \param[in]      void
 *
 * \glob_start
 *
 *   \glob_item{in,  U8_GlobA, global variable used}
 *   \glob_item{out, U8_GlobB, global variable used}
 *
 * \glob_end
 *
 * \returns        void
 *
 ******************************************************************************
 *
 * \author        PDES-BSW
 * \version       1.0
 * \date          04.09.2019
 *
 ******************************************************************************
 *
 * \par Change history:
 *    \li 04.09.2019, PDES-BSW:
 *       - initial revision
 *
 ******************************************************************************
 *
 * \par Remarks:
 *
 ******************************************************************************/
extern void Os_CheckAlarms(void);
#endif /*(STD_OFF != OS_SAVE_CONTEXT_ON_STACK)*/
#endif /* #if (OS_TIMER_SOURCE == OS_TIMER_SYSTICK_S32K) */

/*!
 ******************************************************************************
 * \brief
 * Sets tick counting status
 *
 * \details
 * This function is called by OS SERV module to inform MCAL module about the state
 * of the alarms
 ******************************************************************************
 *
 * \sync          synchronous (function done in one pass)
 * \reent         Non Reentrant
 *
 * \pre           -
 * \post          -
 *
 * \param[out]     void
 * \param[in]      OS_AlarmStarted - TRUE - alarms are started
 *                                 - FALSE - alarms are stopped
 * \glob_start
 *   \glob_item{out,  Os_TickRunning, sets it to TRUE or FALSE depending of OS Scheduler state}
 * \glob_end
 *
 * \returns        void
 ********************************************************************************
 *
 * \author        PDES-BSW
 * \version       1.0
 * \date          04.09.2019
 *
 ******************************************************************************
 *
 * \par Change history:
 *    \li 04.09.2019, PDES-BSW:
 *       - initial revision
 *
 ******************************************************************************
 *
 * \par Remarks:
 *
 ******************************************************************************/
extern void Os_SetTickStatus(boolean OS_AlarmStarted);

#endif /* OS_MCAL_H_ */

/* %PCMS_HEADER_SUBSTITUTION_START:%
******************************************************************************
* Document Management Information Log (generated by Dimensions CM)
*
* Description:
* %PD:%
*
* Used by Baselines:
* %PIRB:%
*
* Used by Dimensions CM Projects:
* %PIRW:%
*
* Change History:
* %PL:%
*
* %PCMS_HEADER_SUBSTITUTION_END:%
*/
