#ifndef SENSOR_AQUISITION_HM
#define SENSOR_AQUISITION_HM


#define ASM_NOP()  __asm("NOP")
#define     __PASTE(a,b)                   a ## b               /* Use this macro to concatenate 2 strings in the pre-compiler */

#define NOP1    ASM_NOP();
#define NOP2    NOP1;  NOP1;
#define NOP3    NOP2;  NOP1;
#define NOP4    NOP3;  NOP1;
#define NOP5    NOP4;  NOP1;
#define NOP6    NOP5;  NOP1;
#define NOP7    NOP6;  NOP1;
#define NOP8    NOP7;  NOP1;
#define NOP9    NOP8;  NOP1;
#define NOP10   NOP9;  NOP1;
#define NOP11   NOP10;  NOP1;
#define NOP12   NOP11;  NOP1;
#define NOP13   NOP12;  NOP1;
#define NOP14   NOP13;  NOP1;
#define NOP15   NOP14;  NOP1;
#define NOP16   NOP15;  NOP1;
#define NOP17   NOP16;  NOP1;
#define NOP18   NOP17;  NOP1;
#define NOP19   NOP18;  NOP1;
#define NOP20   NOP19;  NOP1;
#define NOP21   NOP20;  NOP1;
#define NOP22   NOP21;  NOP1;
#define NOP23   NOP22;  NOP1;
#define NOP24   NOP23;  NOP1;
#define NOP25   NOP24;  NOP1;
#define NOP26   NOP25;  NOP1;
#define NOP27   NOP26;  NOP1;
#define NOP28   NOP27;  NOP1;
#define NOP29   NOP28;  NOP1;
#define NOP30   NOP29;  NOP1;
#define NOP31   NOP30;  NOP1;
#define NOP32   NOP31;  NOP1;
#define NOP33   NOP32;  NOP1;
#define NOP34   NOP33;  NOP1;
#define NOP35   NOP34;  NOP1;
#define NOP36   NOP35;  NOP1;
#define NOP37   NOP36;  NOP1;
#define NOP38   NOP37;  NOP1;
#define NOP39   NOP38;  NOP1;
#define NOP40   NOP39;  NOP1;
#define NOP41   NOP40;  NOP1;
#define NOP42   NOP41;  NOP1;
#define NOP43   NOP42;  NOP1;
#define NOP44   NOP43;  NOP1;
#define NOP45   NOP44;  NOP1;
#define NOP46   NOP45;  NOP1;
#define NOP47   NOP46;  NOP1;
#define NOP48   NOP47;  NOP1;
#define NOP49   NOP48;  NOP1;
#define NOP50   NOP49;  NOP1;
#define NOP51   NOP50;  NOP1;
#define NOP52   NOP50;  NOP2;
#define NOP53   NOP50;  NOP3;
#define NOP54   NOP50;  NOP4;
#define NOP55   NOP50;  NOP5;
#define NOP56   NOP50;  NOP6;
#define NOP57   NOP50;  NOP7;
#define NOP58   NOP50;  NOP8;
#define NOP59   NOP50;  NOP9;
#define NOP60   NOP50; NOP10;
#define NOP61   NOP50; NOP10;
#define NOP62   NOP50; NOP11;
#define NOP63   NOP50; NOP12;
#define NOP64   NOP50; NOP13;
#define NOP65   NOP50; NOP14;
#define NOP66   NOP50; NOP15;
#define NOP67   NOP50; NOP16;
#define NOP68   NOP50; NOP17;
#define NOP69   NOP50; NOP18;
#define NOP70   NOP50; NOP19;
#define NOP71   NOP50; NOP20;
#define NOP72   NOP50; NOP21;
#define NOP73   NOP50; NOP22;
#define NOP74   NOP50; NOP23;
#define NOP75   NOP50; NOP24;
#define NOP76   NOP50; NOP25;
#define NOP77   NOP50; NOP26;
#define NOP78   NOP50; NOP27;
#define NOP79   NOP50; NOP28;
#define NOP80   NOP50; NOP29;
#define NOP81   NOP50; NOP30;
#define NOP82   NOP50; NOP31;
#define NOP83   NOP50; NOP32;
#define NOP84   NOP50; NOP33;
#define NOP85   NOP50; NOP34;
#define NOP86   NOP50; NOP35;
#define NOP87   NOP50; NOP36;
#define NOP88   NOP50; NOP37;
#define NOP89   NOP50; NOP38;
#define NOP90   NOP50; NOP39;
#define NOP91   NOP50; NOP40;
#define NOP92   NOP50; NOP41;
#define NOP93   NOP50; NOP42;
#define NOP94   NOP50; NOP43;
#define NOP95   NOP50; NOP44;
#define NOP96   NOP50; NOP45;
#define NOP97   NOP50; NOP46;
#define NOP98   NOP50; NOP47;
#define NOP99   NOP50; NOP48;
#define NOP100  NOP50; NOP50;
#define NOP138  NOP100; NOP30;NOP8;
#define NOP115  NOP100; NOP15;
#define NOP200  NOP100; NOP100;
#define NOP258  NOP200; NOP58;
#define NOP270  NOP200; NOP70;
#define NOP516  NOP258; NOP258;NOP50;NOP27;
#define NOP540  NOP270; NOP270;NOP50;NOP36;
#define NOP616  NOP516;NOP516;NOP516;
#define NOP640  NOP540;NOP516;NOP516;


#define NOP_DELAY(value)        do{\
                                      __PASTE(NOP,value);\
                                  }while(0);                      

#define ADC__SELECT_CHANNEL(x)  do{                              \
                                   ADS &= ~(U8_BIT5 | U8_BIT6);  \
                                   ADS = (x);                    \
                                  }while(0);            

/* DIO macros */

#define CONCATENATE(a,b)  __PASTE(a,b)


#define DIO_READ_PORT(U8_port)      (CONCATENATE(MCU_PORT,U8_port))
#define DIO_WRITE_PORT(U8_port)     (DIO_READ_PORT(U8_port))
#define DIO_READ_PIN(U8_port)       (CONCATENATE(MCU_PIN,U8_port))
#define DIO_WRITE_PIN(U8_port)      (DIO_READ_PIN(U8_port))

#define DIO_SET_PORT(modul,port,state)    (CONCATENATE(CONCATENATE(CONCATENATE(MCU_PORT,modul),_bit.no),port)= (state))
#define DIO_SET_PIN(modul,pin,state)    (CONCATENATE(CONCATENATE(CONCATENATE(MCU_PIN,modul),_bit.no),pin)= (state))
#define SET_ANALOG_PIN(modul,pin,state)   (CONCATENATE(CONCATENATE(CONCATENATE(MCU_ANALOG,modul),_bit.no),pin)= (state))

#endif /*SENSOR_AQUISITION_HM*/


