
#ifndef SENSOR_ALGO_HI
  #define SENSOR_ALGO_HI

#include "Platform_Types.h"
#include "typedefs.h"


typedef struct
{
    U16    Add_old_result;   /*< Result's value (must have bottom 4 bits shifted out)*/
    U16    Diff_old_result;  /*< Result's value (must have bottom 4 bits shifted out)*/
    U16    accumulator ;     /*< Accumulator's value (must have top 4 bits masked off)*/

}Sensor_AcquisitionData;
extern Sensor_AcquisitionData VR_AcquisitionData;
extern Sensor_AcquisitionData ER_AcquisitionData;

extern U16 U16_ER_Sigma_Delta_Win;                     /* final measurement value ER */
extern U16 U16_VR_Sigma_Delta_Win;                     /* final measurement value VR */

#define	EN_ER_Approach_u1   0x01U
#define EN_ER_TOUCH_u1       0x02U
#define EN_VR_Approach_u1    0x04U
#define EN_VR_TOUCH_u1       0x08U

typedef union
{
  struct
  {
    XINT ER_Approach_u1  :1;     /* flag notifying that a unlock approach has occured */
    XINT ER_TOUCH_u1     :1;     /* flag notifying that a unlock TOUCH has occured */
    XINT VR_Approach_u1  :1;     /* flag notifying that a lock approach has occured */
    XINT VR_TOUCH_u1     :1;     /* flag notifying that a lock TOUCH  has occured */
   /* XINT Algo_busy_u1   :1;*/
  }_Algo_Bit;
  U8 U8_Algo_Byte;
} S_ALGO_STATUS_FLAGS;

algo_export void algo_init(void);
algo_export void algo_diag(void);
algo_export void EcuM_get_capa_sensor_state(void);
algo_export void algorithmus(void);
extern void get_sensor_algo_state_result(U8 * U8_algo_state_arg );
extern void Algo_getErState(U8 *U8_algoState);
extern void Algo_getVrState(U8 *U8_algoState);
algo_export BOOL get_sensor_algo_SM_NotIdle(void);
BOOL boIsCapaActive(void);

extern boolean isAlgoActive(void);

algo_export U16 U16_ER_MeasValue;
algo_export U16 U16_VR_MeasValue;
algo_export U16 U16_ER_Twert;
algo_export U16 U16_VR_Twert;
#define ER_APPROACH     ER_Approach_u1    /* flag notifying that a unlock approach has occured */
#define ER_TOUCH      ER_TOUCH_u1     /* flag notifying that a unlock TOUCH has occured */
#define VR_APPROACH     VR_Approach_u1    /* flag notifying that a lock approach has occured */
#define VR_TOUCH      VR_TOUCH_u1     /* flag notifying that a lock TOUCH  has occured */

#endif /* SENSOR_HI */
